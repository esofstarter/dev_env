# The specification version of docker-compose
version: "3.9"
# The collection of applications composing this service
services:

  traefik:
    image: "traefik:v2.9"
    container_name: "traefik"
    restart: always
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.tls=true"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - main
    labels:
      ## Dashboard
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.entrypoints=web"

  # This container acts as an Apache webserver and PHP interpreter
  app:
    build:
      context: ./bin/php/7.4-fpm
    container_name: dev_env_app
    restart: always
    volumes:
      # - ./mycert.crt:/etc/ssl/certs/mycert.crt
      # - ./mycert.key:/etc/ssl/private/mycert.key
      - ${DOCUMENT_ROOT-./www}:/var/www/html
      - ${PHP_INI-./config/php/php.ini}:/usr/local/etc/php/php.ini
      - ${PHP74_VHOSTS_DIR-./config/vhosts}:/etc/apache2/sites-enabled
      - ${LOG_DIR-./logs/apache2}:/var/log/apache2
    environment:
      APACHE_DOCUMENT_ROOT: ${APACHE_DOCUMENT_ROOT-/var/www/html}
      PMA_PORT: ${HOST_MACHINE_PMA_PORT}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - 80
    networks:
      main:
        aliases:
          - starter.test
        # aliases:
      #  - eventlokale.test #this is needed for SSR nuxt ruting
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mousebags.rule=Host(`mousebags-git.test`)"
      - "traefik.http.routers.starter.rule=Host(`starter.test`)"
      # - "traefik.http.routers.eventlokale.rule=Host(`eventlokale.test`)"
      - "traefik.http.routers.mousebags.entrypoints=web"
      - "traefik.http.routers.starter.entrypoints=web"
      # - "traefik.http.routers.eventlokale.entrypoints=web"
      - "traefik.port=80"

  # This container acts as an Apache webserver and PHP interpreter
  app2:
    build:
      context: ./bin/php/php8
    container_name: dev_env_app2
    restart: always

    volumes:
      # - ./mycert.crt:/etc/ssl/certs/mycert.crt
      # - ./mycert.key:/etc/ssl/private/mycert.key
      - ${DOCUMENT_ROOT-./www}:/var/www/html
      - ${PHP_INI-./config/php/php.ini}:/usr/local/etc/php/php.ini
      - ${PHP8_VHOSTS_DIR-./config/vhosts}:/etc/apache2/sites-enabled
      - ${LOG_DIR-./logs/apache2}:/var/log/apache2
    environment:
      APACHE_DOCUMENT_ROOT: ${APACHE_DOCUMENT_ROOT-/var/www/html}
      PMA_PORT: ${HOST_MACHINE_PMA_PORT}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - 80
    #      - 443
    networks:
      main:
        aliases:
          - fitness-portal.test #this is needed for SSR nuxt ruting
          - eventlokalephp8.test #this is needed for SSR nuxt ruting
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fitnessportal.rule=Host(`fitness-portal.test`)"
      - "traefik.http.routers.eventlokalephp8.rule=Host(`eventlokalephp8.test`)"
      - "traefik.http.routers.fitnessportal.entrypoints=web"
      - "traefik.http.routers.eventlokalephp8.entrypoints=web"
      - "traefik.port=80"

  # This container contains Nodejs dependencies that take care of the JS builds
  node:
    build:
      context: ./bin/node
    container_name: dev_env_node
    restart: always
    command: tail -F anything
    #    command: bash -c "yarn install --ignore-engines && yarn watch"
    ports:
      - 3030:3030
      - 8888:8888
    networks:
      - main
    volumes:
      - ${NODE_ROOT-./www}:/usr/app
    working_dir: /usr/app/eventlokale/website/resources/nuxt
    environment:
      HOST: 0.0.0.0

  # This container is the MySql database
  database:
    build:
      context: ./bin/mysql
    container_name: dev_env_database
    restart: always
    user: 1000:1000
    ports:
      - 0.0.0.0:${HOST_MACHINE_MYSQL_PORT}:3306
    networks:
      - main
    volumes:
      - ${MYSQL_DATA_DIR-./data/mysql}:/var/lib/mysql
      - ${MYSQL_LOG_DIR-./logs/mysql}:/var/log/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_TCP_PORT: 3306

  # This container allows phpmyadmin database access through the browser
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: dev_env_phpmyadmin
    restart: always
    ports:
      - ${HOST_MACHINE_PMA_PORT}:80
    networks:
      - main
    environment:
      PMA_HOST: database
      PMA_USER: root
      PMA_PASSWORD: tiger

  # This container has redis dependencies used for caching
  redis:
    container_name: dev_env_redis
    image: redis:latest
    expose:
      - 6379
    ports:
      - ${HOST_MACHINE_REDIS_PORT}:6379
    networks:
      - main

  whoami:
    image: "traefik/whoami"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`localhost`)"
      - "traefik.http.routers.whoami.entrypoints=web"
      - "traefik.port=80"
    networks:
      - main
networks:
  main:
    external : false
