version: "3.9"
x-service_defaults: &service_defaults
  restart: always
  stdin_open: true
  tty: true
  networks:
    - traefik_default
x-env: &service_env
  CUSTOM_APP_URL: "http://${SERVER_NAME}"
  APP_URL: "http://${SERVER_NAME}"
  APP_DOMAINS: '{"ch":"http://${SERVER_NAME}/","de":"http://${SERVER_NAME}.de/","at":"http://${SERVER_NAME}.at/"}'
  NODE_PORT: ${NODE_PORT}

x-laravel-env: &laravel_env
  APACHE_DOCUMENT_ROOT: ${APACHE_DOCUMENT_ROOT-/var/www/html}
  MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
  APACHE_LOG_DIR: /var/log/apache2
  SERVER_NAME: "${SERVER_NAME}"
  DOCUMENT_ROOT: "${APACHE_DOCUMENT_ROOT}/${PROJECT}/website/public"
  NODE_SERVICE: ${NODE_SERVICE}
  DB_HOST: "${DATABASE_SERVICE}"
  DB_DATABASE: "${MYSQL_DATABASE}"
  DB_PORT: "${MYSQL_PORT}"
  DB_USERNAME: "${MYSQL_USER}"
  DB_PASSWORD: "${MYSQL_PASSWORD}"

services:
  el_laravel_init:
    build:
      context: ./bin/php/php8
    container_name: el_laravel_init
    profiles: ["dev", "dev_vue", "prod", "test", "debug"]
    command: bash -c "chmod 755 /app/init.sh && /bin/bash /app/init.sh"
    # restart: always
    depends_on:
      - el_database
      
    working_dir: ${APACHE_DOCUMENT_ROOT}

    volumes:
      # - ${DOCUMENT_ROOT-./www}:${APACHE_DOCUMENT_ROOT}/${PROJECT}
      - ${PHP_INI-./config/php/php.ini}:/usr/local/etc/php/php.ini
      # - ${PHP8_VHOSTS_DIR-./config/vhosts}:/etc/apache2/sites-enabled
      - ${LOG_DIR-./logs/apache2}:/var/log/apache2
      # init
      - ~/.ssh:/root/.ssh
      - ./bin/php/php8/init.sh:/app/init.sh
      - ./data/${PROJECT}:${APACHE_DOCUMENT_ROOT}/${PROJECT}
      - ./config/env/.env:${APACHE_DOCUMENT_ROOT}/.env

    environment:
      << : [*laravel_env, *service_env]
      PROJECT: "${PROJECT}"
      GIT_REPO: "${GIT_REPO}"
      GIT_BRANCH: "${GIT_BRANCH}"


    networks:
      - traefik_default

  el_laravel:
    build:
      context: ./bin/php/php8
    container_name: el_laravel
    profiles: ["none"]
    restart: always
    depends_on:
      el_laravel_init:
        condition: service_completed_successfully
      el_database:
        condition: service_started

    working_dir: ${APACHE_DOCUMENT_ROOT}

    volumes:
      # - ${DOCUMENT_ROOT-./www}:${APACHE_DOCUMENT_ROOT}/${PROJECT}
      - ${PHP_INI-./config/php/php.ini}:/usr/local/etc/php/php.ini
      - ${PHP8_VHOSTS_DIR-./config/vhosts}:/etc/apache2/sites-enabled
      - ${LOG_DIR-./logs/apache2}:/var/log/apache2

      - ./data/${PROJECT}:${APACHE_DOCUMENT_ROOT}/${PROJECT}
      - ./data/.env:${APACHE_DOCUMENT_ROOT}/.env

    environment:
      << : [*laravel_env, *service_env]

    networks:
      traefik_default:
        aliases:
          - "${SERVER_NAME}"

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${PROJECT}.rule=Host(`${SERVER_NAME}`)"
      - "traefik.http.routers.${PROJECT}.entrypoints=web"
      - "traefik.http.services.${PROJECT}.loadbalancer.server.port=80"
  
  el_laravel_dev:
    extends:
      service: el_laravel
    container_name: el_laravel_dev
    profiles: ["dev", "dev_vue", "prod", "test"]

  el_laravel_debug:
    extends:
      service: el_laravel
    container_name: el_laravel_debug
    profiles: ["debug"]
    volumes:
      - ./config/php/debug/php.ini:/usr/local/etc/php/php.ini

  el_nuxt:
    << : *service_defaults
    build:
      context: ./bin/node
    container_name: el_nuxt
    profiles: ["none"]
    command: bash -c "yarn && yarn nuxt-ts --dotenv ../../.env --port ${NODE_PORT}"

    volumes:
      - ./data/${PROJECT}:/usr/app/${PROJECT}
    working_dir: /usr/app/${PROJECT}/website/resources/nuxt
    expose:
      - 9229
    ports:
      - "9229:9229"
    environment:
      HOST: 0.0.0.0
      # NODE_OPTIONS: --openssl-legacy-provider
      # NODE_OPTIONS: '--inspect-brk=0.0.0.0:9229'
      NODE_ENV: 'development'
      << : *service_env

    healthcheck:
      test: ["CMD-SHELL", "curl -f http://eventlokale.test || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 40

    networks:
      traefik_default:
        aliases:
          - ${NODE_SERVICE}

  el_nuxt_dev:
    extends:
      service: el_nuxt
    container_name: el_nuxt_dev
    profiles: ["dev", "test"]
    command: bash -c "yarn && yarn nuxt-ts --dotenv ../../.env --port ${NODE_PORT}"
    depends_on:
      el_laravel_init:
        condition: service_completed_successfully
      el_laravel_dev:
        condition: service_started

  el_nuxt_debug:
    extends:
      service: el_nuxt
    container_name: el_nuxt_debug
    profiles: ["debug"]
    command: bash -c "yarn && yarn cross-env NODE_OPTIONS='--inspect=0.0.0.0:9229' nuxt-ts --dotenv ../../.env --port ${NODE_PORT}"
    depends_on:
      el_laravel_init:
        condition: service_completed_successfully
      el_laravel_debug:
        condition: service_started

  el_vue:
    extends:
      service: el_nuxt 
    container_name: el_vue
    profiles: ["dev_vue"]
    command: bash -c "yarn --cwd ../../ && yarn --cwd ../../ watch"

  el_nuxt_prod:
    extends:
      service: el_nuxt 
    container_name: el_nuxt_prod
    profiles: ["prod"]
    command: bash -c "yarn --cwd ../../ && yarn --cwd ../../ prod && yarn && yarn nuxt-ts build --dotenv ../../.env && yarn nuxt-ts start --dotenv ../../.env --port ${NODE_PORT}"
    
  el_database:
    << : *service_defaults
    image: mariadb:10.6.14-focal
    container_name: el_database
    profiles: ["dev", "dev_vue", "prod", "test", "debug"]
    command: --default-authentication-plugin=mysql_native_password
    entrypoint: ["/bin/bash", "-c", "tar -xf  /init-scripts.tar.xz -C /docker-entrypoint-initdb.d && docker-entrypoint.sh mysqld"]
    restart: always
    ports:
        - "33069:${MYSQL_PORT}"
    volumes: 
        - ./config/mysql-dump/init-scripts.tar.xz:/init-scripts.tar.xz
        # - ./data/mysql-dump:/docker-entrypoint-initdb.d
        - ./data/mysql:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_TCP_PORT: ${MYSQL_PORT}

  el_cypress:
    << : *service_defaults
    image: cypress/included
    container_name: el_cypress
    profiles: ["test"]
    restart: no
    depends_on:
      el_nuxt_dev:
        condition: service_healthy
    volumes:
      - ./data/${PROJECT}/website/resources/nuxt:/e2e
      - ./data/cypress:/root/.cache/Cypress
    working_dir: /e2e
    entrypoint: [""]
    command: ["sh", "-c", "npx cypress install && npx cypress run --spec 'cypress/e2e/3-eventlokale-nuxt/**/*'"] # && npm i --save-dev cypress-localstorage-commands
    environment:
      CYPRESS_BASE_URL: "http://${SERVER_NAME}"
networks:
  traefik_default:
    name: traefik_default
    external: true
